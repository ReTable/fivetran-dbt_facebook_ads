{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2023-12-12T20:36:44.105230Z", "invocation_id": "77c5013a-bc8c-43a8-b5fc-9ba07233c38f", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.078818Z", "completed_at": "2023-12-12T20:36:43.106743Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.108476Z", "completed_at": "2023-12-12T20:36:43.108494Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03352808952331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_account_history_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.098029Z", "completed_at": "2023-12-12T20:36:43.107257Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.109344Z", "completed_at": "2023-12-12T20:36:43.109347Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03400588035583496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_ad_history_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.101089Z", "completed_at": "2023-12-12T20:36:43.107880Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.110471Z", "completed_at": "2023-12-12T20:36:43.110476Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03477191925048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_ad_set_history_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.103707Z", "completed_at": "2023-12-12T20:36:43.108823Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.111685Z", "completed_at": "2023-12-12T20:36:43.111688Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03534507751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_basic_ad_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.122549Z", "completed_at": "2023-12-12T20:36:43.123561Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.126720Z", "completed_at": "2023-12-12T20:36:43.126727Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013067960739135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.123999Z", "completed_at": "2023-12-12T20:36:43.125004Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.127017Z", "completed_at": "2023-12-12T20:36:43.127021Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00945425033569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_ad_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.115605Z", "completed_at": "2023-12-12T20:36:43.125342Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.127546Z", "completed_at": "2023-12-12T20:36:43.127549Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016518831253051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_campaign_history_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.119710Z", "completed_at": "2023-12-12T20:36:43.126201Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.128866Z", "completed_at": "2023-12-12T20:36:43.128869Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01636505126953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"facebook_ads_integration_tests\".\"facebook_ads_creative_history_data\"", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.134248Z", "completed_at": "2023-12-12T20:36:43.135431Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.142187Z", "completed_at": "2023-12-12T20:36:43.142194Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01234889030456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_ad_set_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.135789Z", "completed_at": "2023-12-12T20:36:43.136836Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.142484Z", "completed_at": "2023-12-12T20:36:43.142486Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012413978576660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_basic_ad_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.137550Z", "completed_at": "2023-12-12T20:36:43.139401Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.143114Z", "completed_at": "2023-12-12T20:36:43.143121Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012267112731933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.140401Z", "completed_at": "2023-12-12T20:36:43.141448Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.144454Z", "completed_at": "2023-12-12T20:36:43.144457Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012310028076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.149276Z", "completed_at": "2023-12-12T20:36:43.486325Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.488068Z", "completed_at": "2023-12-12T20:36:43.488079Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3704349994659424, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    account_status\n    \n , \n    cast(null as TEXT) as \n    \n    business_country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    timezone_name\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as bigint) as account_id,\n        _fivetran_synced,\n        name as account_name,\n        account_status,\n        business_country_code,\n        created_time as created_at,\n        currency,\n        timezone_name,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.156096Z", "completed_at": "2023-12-12T20:36:43.487796Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.489964Z", "completed_at": "2023-12-12T20:36:43.489966Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3705630302429199, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    ad_set_id\n    \n as \n    \n    ad_set_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n\n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_id,\n        name as ad_name,\n        cast(account_id as bigint) as account_id,\n        cast(ad_set_id as bigint) as ad_set_id,   \n        cast(campaign_id as bigint) as campaign_id,\n        cast(creative_id as bigint) as creative_id,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.161550Z", "completed_at": "2023-12-12T20:36:43.486699Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.488636Z", "completed_at": "2023-12-12T20:36:43.488640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3727879524230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    bid_strategy\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    budget_remaining\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_set_id,\n        name as ad_set_name,\n        cast(account_id as bigint) as account_id,\n        cast(campaign_id as bigint) as campaign_id,\n        start_time as start_at,\n        end_time as end_at,\n        bid_strategy,\n        daily_budget,\n        budget_remaining,\n        status,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.166292Z", "completed_at": "2023-12-12T20:36:43.487277Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.489419Z", "completed_at": "2023-12-12T20:36:43.489423Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.37225914001464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    ad_id\n    \n as \n    \n    ad_id\n    \n, \n    cast(null as TEXT) as \n    \n    ad_name\n    \n , \n    cast(null as TEXT) as \n    \n    adset_name\n    \n , \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    inline_link_clicks\n    \n as \n    \n    inline_link_clicks\n    \n, \n    \n    \n    spend\n    \n as \n    \n    spend\n    \n, \n    cast(null as integer) as \n    \n    reach\n    \n , \n    cast(null as float) as \n    \n    frequency\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as bigint) as ad_id,\n        ad_name,\n        adset_name as ad_set_name,\n        date as date_day,\n        cast(account_id as bigint) as account_id,\n        impressions,\n        coalesce(inline_link_clicks,0) as clicks,\n        spend,\n        reach,\n        frequency\n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.569456Z", "completed_at": "2023-12-12T20:36:43.581717Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.582977Z", "completed_at": "2023-12-12T20:36:43.582984Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016859769821166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_source_relation__account_id___fivetran_synced.f81aca1247", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, _fivetran_synced\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    group by source_relation, account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.577608Z", "completed_at": "2023-12-12T20:36:43.582116Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.583276Z", "completed_at": "2023-12-12T20:36:43.583280Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016937971115112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_source_relation__ad_id__updated_at.664b870e6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.592367Z", "completed_at": "2023-12-12T20:36:43.595761Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.597005Z", "completed_at": "2023-12-12T20:36:43.597011Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011749029159545898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.587215Z", "completed_at": "2023-12-12T20:36:43.596138Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.597266Z", "completed_at": "2023-12-12T20:36:43.597269Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0127410888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.603304Z", "completed_at": "2023-12-12T20:36:43.606119Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.607161Z", "completed_at": "2023-12-12T20:36:43.607166Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008348941802978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.600341Z", "completed_at": "2023-12-12T20:36:43.606399Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.607429Z", "completed_at": "2023-12-12T20:36:43.607432Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009254217147827148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.616969Z", "completed_at": "2023-12-12T20:36:43.620031Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.621032Z", "completed_at": "2023-12-12T20:36:43.621038Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012021064758300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_source_relation__ad_set_id__updated_at.ff1d43114a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_set_id, updated_at\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\n    group by source_relation, ad_set_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.610569Z", "completed_at": "2023-12-12T20:36:43.620326Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.621297Z", "completed_at": "2023-12-12T20:36:43.621301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012864828109741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n\n), \n\naccounts as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_status,\n        accounts.business_country_code,\n        accounts.created_at,\n        accounts.currency,\n        accounts.timezone_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__account_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.624523Z", "completed_at": "2023-12-12T20:36:43.630991Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.631514Z", "completed_at": "2023-12-12T20:36:43.631519Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008806943893432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_source_relation__date_day__ad_id__account_id.9c647961f0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, account_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n    group by source_relation, date_day, ad_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.628222Z", "completed_at": "2023-12-12T20:36:43.635667Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.636247Z", "completed_at": "2023-12-12T20:36:43.636251Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013128995895385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.633111Z", "completed_at": "2023-12-12T20:36:43.637223Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.638375Z", "completed_at": "2023-12-12T20:36:43.638378Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008969783782958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.638647Z", "completed_at": "2023-12-12T20:36:43.642772Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.646051Z", "completed_at": "2023-12-12T20:36:43.646056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008954763412475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.643085Z", "completed_at": "2023-12-12T20:36:43.647466Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.650933Z", "completed_at": "2023-12-12T20:36:43.650939Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009225130081176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.648221Z", "completed_at": "2023-12-12T20:36:43.656176Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.656788Z", "completed_at": "2023-12-12T20:36:43.656794Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010162115097045898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_source_relation__date_day__account_id.bf8a017de1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__account_report\"\n    group by source_relation, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.652677Z", "completed_at": "2023-12-12T20:36:43.657750Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.658263Z", "completed_at": "2023-12-12T20:36:43.658267Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006680965423583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__account_report\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.525319Z", "completed_at": "2023-12-12T20:36:43.922897Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.923458Z", "completed_at": "2023-12-12T20:36:43.923464Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4304478168487549, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    page_link\n    \n as \n    \n    page_link\n    \n, \n    \n    \n    template_page_link\n    \n as \n    \n    template_page_link\n    \n, \n    \n    \n    url_tags\n    \n as \n    \n    url_tags\n    \n, \n    \n    \n    asset_feed_spec_link_urls\n    \n as \n    \n    asset_feed_spec_link_urls\n    \n, \n    \n    \n    object_story_link_data_child_attachments\n    \n as \n    \n    object_story_link_data_child_attachments\n    \n, \n    \n    \n    object_story_link_data_caption\n    \n as \n    \n    object_story_link_data_caption\n    \n, \n    \n    \n    object_story_link_data_description\n    \n as \n    \n    object_story_link_data_description\n    \n, \n    \n    \n    object_story_link_data_link\n    \n as \n    \n    object_story_link_data_link\n    \n, \n    \n    \n    object_story_link_data_message\n    \n as \n    \n    object_story_link_data_message\n    \n, \n    cast(null as TEXT) as \n    \n    template_app_link_spec_android\n    \n , \n    \n    \n    template_app_link_spec_ios\n    \n as \n    \n    template_app_link_spec_ios\n    \n, \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ipad\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_iphone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id,\n        _fivetran_synced,\n        cast(id as bigint) as creative_id,\n        cast(account_id as bigint) as account_id,\n        name as creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.521019Z", "completed_at": "2023-12-12T20:36:43.923989Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.924555Z", "completed_at": "2023-12-12T20:36:43.924558Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.43149685859680176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    stop_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    lifetime_budget\n    \n , \n    cast(null as float) as \n    \n    budget_remaining\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        created_time as created_at,\n        cast(account_id as bigint) as account_id,\n        cast(id as bigint) as campaign_id,\n        name as campaign_name,\n        start_time as start_at,\n        stop_time as end_at,\n        status,\n        daily_budget,\n        lifetime_budget,\n        budget_remaining,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.951689Z", "completed_at": "2023-12-12T20:36:43.957713Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.967947Z", "completed_at": "2023-12-12T20:36:43.967954Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017506122589111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_tags", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\n    where is_most_recent_record = true\n), \n\nrequired_fields as (\n\n    select\n        source_relation,\n        _fivetran_id,\n        creative_id,\n        url_tags\n    from base\n    where url_tags is not null\n), \n\n\n\n  cleaned_json as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          replace(trim(url_tags::text, '\"'),'\\\\','')::json as cleaned_url_tags\n      from required_fields\n  ), \n\n  unnested as (\n\n      select \n        source_relation,\n        _fivetran_id, \n        creative_id, \n        url_tag_element\n      from cleaned_json\n      left join lateral json_array_elements(cleaned_url_tags) as url_tag_element on True\n      where cleaned_url_tags is not null\n  ), \n\n  fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          url_tag_element->>'key' as key,\n          url_tag_element->>'value' as value,\n          url_tag_element->>'type' as type\n      from unnested\n  )\n\n \n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_tags\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.958893Z", "completed_at": "2023-12-12T20:36:43.969908Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.976951Z", "completed_at": "2023-12-12T20:36:43.976958Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02161574363708496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_source_relation__creative_id___fivetran_synced.70610714a9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, creative_id, _fivetran_synced\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\n    group by source_relation, creative_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.962088Z", "completed_at": "2023-12-12T20:36:43.970585Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.977315Z", "completed_at": "2023-12-12T20:36:43.977318Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022107839584350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.965503Z", "completed_at": "2023-12-12T20:36:43.970916Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.977619Z", "completed_at": "2023-12-12T20:36:43.977623Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022186994552612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.971432Z", "completed_at": "2023-12-12T20:36:43.978552Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:43.981364Z", "completed_at": "2023-12-12T20:36:43.981367Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013230085372924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n\n), \n\naccounts as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.983546Z", "completed_at": "2023-12-12T20:36:43.999326Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.003718Z", "completed_at": "2023-12-12T20:36:44.003726Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023960113525390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_set_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n\n), \n\naccounts as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ad_sets.start_at,\n        ad_sets.end_at,\n        ad_sets.bid_strategy,\n        ad_sets.daily_budget,\n        ad_sets.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_set_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.989335Z", "completed_at": "2023-12-12T20:36:43.999906Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.004345Z", "completed_at": "2023-12-12T20:36:44.004349Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024663925170898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n\n), \n\naccounts as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        campaigns.start_at,\n        campaigns.end_at,\n        campaigns.status,\n        campaigns.daily_budget,\n        campaigns.lifetime_budget,\n        campaigns.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report \n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__campaign_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:43.994123Z", "completed_at": "2023-12-12T20:36:44.000434Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.005394Z", "completed_at": "2023-12-12T20:36:44.005403Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02531576156616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_source_relation__campaign_id__updated_at.82c4f9a2a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.000694Z", "completed_at": "2023-12-12T20:36:44.005784Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.009061Z", "completed_at": "2023-12-12T20:36:44.009067Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011908292770385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.011093Z", "completed_at": "2023-12-12T20:36:44.040255Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.045785Z", "completed_at": "2023-12-12T20:36:44.045793Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04148602485656738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.014814Z", "completed_at": "2023-12-12T20:36:44.045448Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.050492Z", "completed_at": "2023-12-12T20:36:44.050496Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04239702224731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.int_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\n    where is_most_recent_record = true\n\n), \n\nurl_tags as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_tags\"\n), \n\nurl_tags_pivoted as (\n\n    select \n        source_relation,\n        _fivetran_id,\n        creative_id,\n        min(case when key = 'utm_source' then value end) as utm_source,\n        min(case when key = 'utm_medium' then value end) as utm_medium,\n        min(case when key = 'utm_campaign' then value end) as utm_campaign,\n        min(case when key = 'utm_content' then value end) as utm_content,\n        min(case when key = 'utm_term' then value end) as utm_term\n    from url_tags\n    group by 1,2,3\n\n), \n\nfields as (\n\n    select\n        base.source_relation,\n        base._fivetran_id,\n        base.creative_id,\n        base.account_id,\n        base.creative_name,\n        coalesce(page_link,template_page_link) as url,\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        '?',\n        1\n        )\n\n\n  \n\n as base_url,\n        \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n\n  \n\n,\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_host,\n        '/' || \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n    right(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n    ),\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_source=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_medium=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_campaign=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_content=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        coalesce(page_link,template_page_link),\n        'utm_term=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base._fivetran_id = url_tags_pivoted._fivetran_id\n        and base.source_relation = url_tags_pivoted.source_relation\n        and base.creative_id = url_tags_pivoted.creative_id\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"int_facebook_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.040589Z", "completed_at": "2023-12-12T20:36:44.049027Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.051325Z", "completed_at": "2023-12-12T20:36:44.051328Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04299211502075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags_source_relation___fivetran_id__key__type.c65de59dec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id, key, type\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_tags\"\n    group by source_relation, _fivetran_id, key, type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.046092Z", "completed_at": "2023-12-12T20:36:44.051037Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.054050Z", "completed_at": "2023-12-12T20:36:44.054055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013977289199829102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_tags\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.055005Z", "completed_at": "2023-12-12T20:36:44.062585Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.066779Z", "completed_at": "2023-12-12T20:36:44.066785Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01955413818359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.c866a344f6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_report\"\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.059850Z", "completed_at": "2023-12-12T20:36:44.066499Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.072310Z", "completed_at": "2023-12-12T20:36:44.072314Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01900506019592285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_report\"\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.063264Z", "completed_at": "2023-12-12T20:36:44.070883Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.073155Z", "completed_at": "2023-12-12T20:36:44.073158Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016295909881591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_source_relation__date_day__account_id__campaign_id__ad_set_id.8707f6bd30", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_set_report\"\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.067066Z", "completed_at": "2023-12-12T20:36:44.072850Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.075706Z", "completed_at": "2023-12-12T20:36:44.075710Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01680779457092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__ad_set_report\"\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.076658Z", "completed_at": "2023-12-12T20:36:44.088836Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.089557Z", "completed_at": "2023-12-12T20:36:44.089564Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016560077667236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_source_relation__date_day__account_id__campaign_id.f97e1afff3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__campaign_report\"\n    group by source_relation, date_day, account_id, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.081006Z", "completed_at": "2023-12-12T20:36:44.089827Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.091376Z", "completed_at": "2023-12-12T20:36:44.091380Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015826940536499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__campaign_report\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.083669Z", "completed_at": "2023-12-12T20:36:44.090099Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.091655Z", "completed_at": "2023-12-12T20:36:44.091658Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012536048889160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n\n), \n\ncreatives as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"int_facebook_ads__creative_history\"\n\n), \n\naccounts as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    where is_most_recent_record = true\n\n), \n\nads as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    where is_most_recent_record = true\n\n), \n\nad_sets as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\n    where is_most_recent_record = true\n\n), \n\ncampaigns as (\n\n    select *\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    where is_most_recent_record = true\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        \n\n\n\n\n    from report\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation  \n\n    \n        where creatives.url is not null\n    \n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.097726Z", "completed_at": "2023-12-12T20:36:44.101437Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.102446Z", "completed_at": "2023-12-12T20:36:44.102452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009068012237548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_report\"\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:36:44.094885Z", "completed_at": "2023-12-12T20:36:44.101704Z"}, {"name": "execute", "started_at": "2023-12-12T20:36:44.102709Z", "completed_at": "2023-12-12T20:36:44.102712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009915828704833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.ef8d3469d4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from \"postgres\".\"facebook_ads_integration_tests_facebook_ads\".\"facebook_ads__url_report\"\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.108847141265869, "args": {"partial_parse_file_diff": true, "quiet": false, "macro_debugging": false, "populate_cache": true, "target": "postgres", "select": [], "partial_parse": true, "compile": true, "static_parser": true, "vars": {}, "introspect": true, "empty_catalog": false, "print": true, "use_colors": true, "send_anonymous_usage_stats": true, "invocation_command": "dbt docs generate -t postgres", "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/ad_reporting/facebook/dbt_facebook_ads/integration_tests/logs", "show_resource_report": false, "write_json": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "strict_mode": false, "static": false, "log_file_max_bytes": 10485760, "which": "generate", "printer_width": 80, "cache_selected_only": false, "favor_state": false, "log_level": "info", "version_check": true, "defer": false, "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "log_format_file": "debug", "indirect_selection": "eager", "exclude": [], "enable_legacy_logger": false, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/ad_reporting/facebook/dbt_facebook_ads/integration_tests", "log_level_file": "debug", "log_format": "default"}}